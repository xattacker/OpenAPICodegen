/**
* MOTC Transport  API V2
* </div>   <div class=\"info_description markdown\">本平臺提供涵蓋全國尺度之公車、臺鐵、高鐵、捷運、航空、自行車等公共運輸旅運資料服務API，歡迎各產政學單位介接使用。<br><span class=\"swagger-description-indicatation\">利用本平臺開放資料進行各項應用服務開發時，請考量不同特性使用者(如:性別/殘障/視障/老幼等)的需求，並歡迎回饋寶貴意見。</span><br><br>資料使用葵花寶典:<a href= https://ptxmotc.gitbooks.io/ptx-api-documentation/content/ >請點我</a><br>資料服務開發實作參考手冊:<a href= https://docs.google.com/viewer?url=https://github.com/ptxmotc/PTX_Web/blob/master/Swagger%E6%9C%8D%E5%8B%99%E8%AA%AA%E6%98%8E%E4%B8%8A%E5%82%B3%E5%8F%83%E8%80%83%E6%AA%94%E6%A1%88/%E5%85%AC%E5%85%B1%E9%81%8B%E8%BC%B8%E6%95%B4%E5%90%88%E8%B3%87%E8%A8%8A%E5%B9%B3%E5%8F%B0%E8%B3%87%E6%96%99%E6%9C%8D%E5%8B%99%E9%96%8B%E7%99%BC%E5%AF%A6%E4%BD%9C.pdf?raw=true >請點我</a><br>API URI Convention文件說明:<a href= https://docs.google.com/viewer?url=https://github.com/ptxmotc/PTX_Web/blob/master/Swagger%E6%9C%8D%E5%8B%99%E8%AA%AA%E6%98%8E%E4%B8%8A%E5%82%B3%E5%8F%83%E8%80%83%E6%AA%94%E6%A1%88/API_URI_Convention%E6%96%87%E4%BB%B6_v1.pdf?raw=true >請點我</a>
*
* OpenAPI spec version: v2
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.ServiceDTOVersion2BaseNameType

import com.squareup.moshi.Json
/**
 * 台鐵車站站別時刻表資料型別
 * @param trainDate 時刻表日期(格式: yyyy-MM-dd)
 * @param stationID 車站代號
 * @param stationName 
 * @param trainNo 車次代號
 * @param direction 順逆行
 * @param tripLine 山海線類型
 * @param trainTypeID 列車車種代碼
 * @param trainTypeCode 列車車種簡碼
 * @param trainTypeName 
 * @param startingStationID 起點車站代號
 * @param startingStationName 起點車站名稱
 * @param endingStationID 終點車站代號
 * @param endingStationName 終點車站名稱
 * @param arrivalTime 到站時間(格式: HH:mm:ss)
 * @param departureTime 離站時間(格式: HH:mm:ss)
 * @param updateTime 本平台資料更新時間(ISO8601格式:yyyy-MM-ddTHH:mm:sszzz)
 */
data class ServiceDTOVersion2RailTRARailStationTimetable (
    /* 時刻表日期(格式: yyyy-MM-dd) */
    val trainDate: kotlin.String,
    /* 車站代號 */
    val stationID: kotlin.String,
    val stationName: ServiceDTOVersion2BaseNameType,
    /* 車次代號 */
    val trainNo: kotlin.String,
    /* 順逆行 */
    val direction: ServiceDTOVersion2RailTRARailStationTimetable.Direction,
    /* 列車車種代碼 */
    val trainTypeID: kotlin.String,
    /* 列車車種簡碼 */
    val trainTypeCode: kotlin.String,
    val trainTypeName: ServiceDTOVersion2BaseNameType,
    /* 起點車站代號 */
    val startingStationID: kotlin.String,
    /* 起點車站名稱 */
    val startingStationName: kotlin.String,
    /* 終點車站代號 */
    val endingStationID: kotlin.String,
    /* 終點車站名稱 */
    val endingStationName: kotlin.String,
    /* 到站時間(格式: HH:mm:ss) */
    val arrivalTime: kotlin.String,
    /* 離站時間(格式: HH:mm:ss) */
    val departureTime: kotlin.String,
    /* 本平台資料更新時間(ISO8601格式:yyyy-MM-ddTHH:mm:sszzz) */
    val updateTime: kotlin.String,
    /* 山海線類型 */
    val tripLine: ServiceDTOVersion2RailTRARailStationTimetable.TripLine? = null
) {

    /**
    * 順逆行
    * Values: _0colon,_1colon
    */
    enum class Direction(val value: kotlin.String){
    
        @Json(name = "0: 順行") _0colon("0: 順行"),
    
        @Json(name = "1: 逆行") _1colon("1: 逆行");
    
    }

    /**
    * 山海線類型
    * Values: _0colon,_1colon,_2colon
    */
    enum class TripLine(val value: kotlin.String){
    
        @Json(name = "0: 不經山海線") _0colon("0: 不經山海線"),
    
        @Json(name = "1: 山線") _1colon("1: 山線"),
    
        @Json(name = "2: 海線") _2colon("2: 海線");
    
    }

}

