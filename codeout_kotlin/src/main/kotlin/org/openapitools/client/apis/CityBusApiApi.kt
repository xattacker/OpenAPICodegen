/**
* MOTC Transport  API V2
* </div>   <div class=\"info_description markdown\">本平臺提供涵蓋全國尺度之公車、臺鐵、高鐵、捷運、航空、自行車等公共運輸旅運資料服務API，歡迎各產政學單位介接使用。<br><span class=\"swagger-description-indicatation\">利用本平臺開放資料進行各項應用服務開發時，請考量不同特性使用者(如:性別/殘障/視障/老幼等)的需求，並歡迎回饋寶貴意見。</span><br><br>資料使用葵花寶典:<a href= https://ptxmotc.gitbooks.io/ptx-api-documentation/content/ >請點我</a><br>資料服務開發實作參考手冊:<a href= https://docs.google.com/viewer?url=https://github.com/ptxmotc/PTX_Web/blob/master/Swagger%E6%9C%8D%E5%8B%99%E8%AA%AA%E6%98%8E%E4%B8%8A%E5%82%B3%E5%8F%83%E8%80%83%E6%AA%94%E6%A1%88/%E5%85%AC%E5%85%B1%E9%81%8B%E8%BC%B8%E6%95%B4%E5%90%88%E8%B3%87%E8%A8%8A%E5%B9%B3%E5%8F%B0%E8%B3%87%E6%96%99%E6%9C%8D%E5%8B%99%E9%96%8B%E7%99%BC%E5%AF%A6%E4%BD%9C.pdf?raw=true >請點我</a><br>API URI Convention文件說明:<a href= https://docs.google.com/viewer?url=https://github.com/ptxmotc/PTX_Web/blob/master/Swagger%E6%9C%8D%E5%8B%99%E8%AA%AA%E6%98%8E%E4%B8%8A%E5%82%B3%E5%8F%83%E8%80%83%E6%AA%94%E6%A1%88/API_URI_Convention%E6%96%87%E4%BB%B6_v1.pdf?raw=true >請點我</a>
*
* OpenAPI spec version: v2
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.apis

import org.openapitools.client.models.ServiceDTOVersion2BaseOperator
import org.openapitools.client.models.ServiceDTOVersion2BusBusA1Data
import org.openapitools.client.models.ServiceDTOVersion2BusBusA2Data
import org.openapitools.client.models.ServiceDTOVersion2BusBusDisplayStopOfRoute
import org.openapitools.client.models.ServiceDTOVersion2BusBusN1EstimateTime
import org.openapitools.client.models.ServiceDTOVersion2BusBusNews
import org.openapitools.client.models.ServiceDTOVersion2BusBusRoute
import org.openapitools.client.models.ServiceDTOVersion2BusBusRouteFare
import org.openapitools.client.models.ServiceDTOVersion2BusBusSchedule
import org.openapitools.client.models.ServiceDTOVersion2BusBusShape
import org.openapitools.client.models.ServiceDTOVersion2BusBusStation
import org.openapitools.client.models.ServiceDTOVersion2BusBusStop
import org.openapitools.client.models.ServiceDTOVersion2BusBusStopOfRoute
import org.openapitools.client.models.ServiceDTOVersion2BusBusVehicleInfo
import org.openapitools.client.models.ServiceDTOVersion2BusBusVersion

import org.openapitools.client.infrastructure.*

class CityBusApiApi(basePath: kotlin.String = "http://ptx.transportdata.tw/MOTC") : ApiClient(basePath) {

    /**
    * 取得指定[縣市]目前資料的最新版本資訊
    * 版本詳細資訊
    * @param city 欲查詢縣市 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @return ServiceDTOVersion2BusBusVersion
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiDataVersion(city: kotlin.String, &#x60;$format&#x60;: kotlin.String) : ServiceDTOVersion2BusBusVersion {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/DataVersion/City/{City}".replace("{"+"City"+"}", "$city"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<ServiceDTOVersion2BusBusVersion>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as ServiceDTOVersion2BusBusVersion
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市]的市區公車顯示用路線站序資料
    * 市區公車之顯示用路線站序資料，僅台北市與新北市可查詢
    * @param city 欲查詢縣市 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusDisplayStopOfRoute>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiDisplayStopOfRoute(city: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusDisplayStopOfRoute> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/DisplayStopOfRoute/City/{City}".replace("{"+"City"+"}", "$city"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusDisplayStopOfRoute>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusDisplayStopOfRoute>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市],[路線名稱]的市區公車顯示用路線站序資料
    * 市區公車之顯示用路線站序資料，僅台北市與新北市可查詢
    * @param city 欲查詢縣市 
    * @param routeName 繁體中文路線名稱，如&#39;307&#39; 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusDisplayStopOfRoute>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiDisplayStopOfRoute_0(city: kotlin.String, routeName: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusDisplayStopOfRoute> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/DisplayStopOfRoute/City/{City}/{RouteName}".replace("{"+"City"+"}", "$city").replace("{"+"RouteName"+"}", "$routeName"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusDisplayStopOfRoute>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusDisplayStopOfRoute>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市]的公車預估到站資料(N1)
    * [部分縣市] 當 StopStatus &#x3D; 1(尚未發車) 且 EstimateTime &amp;gt; 0 (有值) 的情形, 屬正常情形, 雖目前尚未發車, 但提供EstimateTime值為預計多久後開始發車之時間
    * @param city 欲查詢縣市 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusN1EstimateTime>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiEstimatedTimeOfArrival(city: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusN1EstimateTime> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/EstimatedTimeOfArrival/City/{City}".replace("{"+"City"+"}", "$city"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusN1EstimateTime>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusN1EstimateTime>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市],[路線名稱]的公車預估到站資料(N1)
    * [部分縣市] 當 StopStatus &#x3D; 1(尚未發車) 且 EstimateTime &amp;gt; 0 (有值) 的情形, 屬正常情形, 雖目前尚未發車, 但提供EstimateTime值為預計多久後開始發車之時間
    * @param city 欲查詢縣市 
    * @param routeName 繁體中文路線名稱，如&#39;307&#39; 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusN1EstimateTime>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiEstimatedTimeOfArrival_0(city: kotlin.String, routeName: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusN1EstimateTime> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/EstimatedTimeOfArrival/City/{City}/{RouteName}".replace("{"+"City"+"}", "$city").replace("{"+"RouteName"+"}", "$routeName"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusN1EstimateTime>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusN1EstimateTime>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得市區客運之最新消息
    * 市區客運之最新消息
    * @param city  
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusNews>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiNews(city: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusNews> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/News/City/{City}".replace("{"+"City"+"}", "$city"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusNews>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusNews>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市]的市區公車營運業者資料
    * 市區公車之營運業者資料
    * @param city 欲查詢縣市 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BaseOperator>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiOperator(city: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BaseOperator> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/Operator/City/{City}".replace("{"+"City"+"}", "$city"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BaseOperator>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BaseOperator>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市]的公車動態定時資料(A1)
    * 市區公車之定時資料(A1)
    * @param city 欲查詢縣市 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @param &#x60;$spatialFilter&#x60; 空間過濾 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusA1Data>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiRealTimeByFrequency(city: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null, &#x60;$spatialFilter&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusA1Data> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$spatialFilter" to if (&#x60;$spatialFilter&#x60; != null) listOf("$&#x60;$spatialFilter&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/RealTimeByFrequency/City/{City}".replace("{"+"City"+"}", "$city"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusA1Data>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusA1Data>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市],[路線名稱]的公車動態定時資料(A1)
    * 市區公車之定時資料(A1)
    * @param city 欲查詢縣市 
    * @param routeName 繁體中文路線名稱，如&#39;307&#39; 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @param &#x60;$spatialFilter&#x60; 空間過濾 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusA1Data>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiRealTimeByFrequency_0(city: kotlin.String, routeName: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null, &#x60;$spatialFilter&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusA1Data> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$spatialFilter" to if (&#x60;$spatialFilter&#x60; != null) listOf("$&#x60;$spatialFilter&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/RealTimeByFrequency/City/{City}/{RouteName}".replace("{"+"City"+"}", "$city").replace("{"+"RouteName"+"}", "$routeName"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusA1Data>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusA1Data>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市]的公車動態定點資料(A2)
    * 市區公車之定點資料(A2)
    * @param city 欲查詢縣市 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusA2Data>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiRealTimeNearStop(city: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusA2Data> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/RealTimeNearStop/City/{City}".replace("{"+"City"+"}", "$city"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusA2Data>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusA2Data>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市],[路線名稱]的公車動態定點資料(A2)
    * 市區公車之定點資料(A2)
    * @param city 欲查詢縣市 
    * @param routeName 繁體中文路線名稱，如&#39;307&#39; 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusA2Data>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiRealTimeNearStop_0(city: kotlin.String, routeName: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusA2Data> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/RealTimeNearStop/City/{City}/{RouteName}".replace("{"+"City"+"}", "$city").replace("{"+"RouteName"+"}", "$routeName"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusA2Data>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusA2Data>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市]的市區公車路線資料
    * 市區公車之路線資料
    * @param city 欲查詢縣市 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusRoute>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiRoute(city: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusRoute> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/Route/City/{City}".replace("{"+"City"+"}", "$city"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusRoute>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusRoute>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市]的市區公車路線票價資料
    * 市區公車路線票價資料
    * @param city 欲查詢縣市 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusRouteFare>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiRouteFare(city: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusRouteFare> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/RouteFare/City/{City}".replace("{"+"City"+"}", "$city"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusRouteFare>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusRouteFare>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市],[路線名稱]的路線資料
    * 市區公車之路線資料
    * @param city 欲查詢縣市 
    * @param routeName 繁體中文路線名稱，如&#39;307&#39; 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusRoute>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiRoute_0(city: kotlin.String, routeName: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusRoute> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/Route/City/{City}/{RouteName}".replace("{"+"City"+"}", "$city").replace("{"+"RouteName"+"}", "$routeName"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusRoute>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusRoute>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市]的市區公車路線班表資料
    * 市區公車之班表及班距資料。一般市區公車班次較多時會採用【班距】式時刻表；班次較少時會採用【班表】式時刻表
    * @param city 欲查詢縣市 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusSchedule>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiSchedule(city: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusSchedule> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/Schedule/City/{City}".replace("{"+"City"+"}", "$city"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusSchedule>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusSchedule>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市],[路線名稱]的市區公車路線班表資料
    * 市區公車之預定班表及班距資料。一般市區公車班次較多時會採用【班距】式時刻表；班次較少時會採用【班表】式時刻表
    * @param city 欲查詢縣市 
    * @param routeName 繁體中文路線名稱，如&#39;307&#39; 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusSchedule>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiSchedule_0(city: kotlin.String, routeName: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusSchedule> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/Schedule/City/{City}/{RouteName}".replace("{"+"City"+"}", "$city").replace("{"+"RouteName"+"}", "$routeName"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusSchedule>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusSchedule>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市]的市區公車線型資料
    * 市區公車之線型資料
    * @param city 欲查詢縣市 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusShape>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiShape(city: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusShape> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/Shape/City/{City}".replace("{"+"City"+"}", "$city"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusShape>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusShape>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市]的市區公車站位資料
    * 市區公車之各站牌所屬的站位資料
    * @param city 欲查詢縣市 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @param &#x60;$spatialFilter&#x60; 空間過濾 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusStation>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiStation(city: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null, &#x60;$spatialFilter&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusStation> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$spatialFilter" to if (&#x60;$spatialFilter&#x60; != null) listOf("$&#x60;$spatialFilter&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/Station/City/{City}".replace("{"+"City"+"}", "$city"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusStation>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusStation>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市]的市區公車站牌資料
    * 市區公車之站牌資料
    * @param city 欲查詢縣市 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @param &#x60;$spatialFilter&#x60; 空間過濾 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusStop>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiStop(city: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null, &#x60;$spatialFilter&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusStop> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$spatialFilter" to if (&#x60;$spatialFilter&#x60; != null) listOf("$&#x60;$spatialFilter&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/Stop/City/{City}".replace("{"+"City"+"}", "$city"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusStop>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusStop>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市]的市區公車路線站序資料
    * 市區公車之路線站序資料
    * @param city 欲查詢縣市 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusStopOfRoute>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiStopOfRoute(city: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusStopOfRoute> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/StopOfRoute/City/{City}".replace("{"+"City"+"}", "$city"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusStopOfRoute>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusStopOfRoute>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市],[路線名稱]的市區公車路線站序資料
    * 市區公車之路線站序資料
    * @param city 欲查詢縣市 
    * @param routeName 繁體中文路線名稱，如&#39;307&#39; 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusStopOfRoute>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiStopOfRoute_0(city: kotlin.String, routeName: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusStopOfRoute> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/StopOfRoute/City/{City}/{RouteName}".replace("{"+"City"+"}", "$city").replace("{"+"RouteName"+"}", "$routeName"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusStopOfRoute>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusStopOfRoute>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

    /**
    * 取得指定[縣市]的市區公車車輛資料
    * 市區公車之車輛資料
    * @param city 欲查詢縣市 
    * @param &#x60;$format&#x60; 指定來源格式 
    * @param &#x60;$select&#x60; 挑選 (optional, default to null)
    * @param &#x60;$filter&#x60; 過濾 (optional, default to null)
    * @param &#x60;$orderby&#x60; 排序 (optional, default to null)
    * @param &#x60;$top&#x60; 取前幾筆 (optional, default to 30)
    * @param &#x60;$skip&#x60; 跳過前幾筆 (optional, default to null)
    * @return kotlin.Array<ServiceDTOVersion2BusBusVehicleInfo>
    */
    @Suppress("UNCHECKED_CAST")
    fun cityBusApiVehicle(city: kotlin.String, &#x60;$format&#x60;: kotlin.String, &#x60;$select&#x60;: kotlin.String? = null, &#x60;$filter&#x60;: kotlin.String? = null, &#x60;$orderby&#x60;: kotlin.String? = null, &#x60;$top&#x60;: kotlin.String? = null, &#x60;$skip&#x60;: kotlin.String? = null) : kotlin.Array<ServiceDTOVersion2BusBusVehicleInfo> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: Map<String, List<String>?> = mapOf("$select" to if (&#x60;$select&#x60; != null) listOf("$&#x60;$select&#x60;") else null, "$filter" to if (&#x60;$filter&#x60; != null) listOf("$&#x60;$filter&#x60;") else null, "$orderby" to if (&#x60;$orderby&#x60; != null) listOf("$&#x60;$orderby&#x60;") else null, "$top" to if (&#x60;$top&#x60; != null) listOf("$&#x60;$top&#x60;") else null, "$skip" to if (&#x60;$skip&#x60; != null) listOf("$&#x60;$skip&#x60;") else null, "$format" to if (&#x60;$format&#x60; != null) listOf("$&#x60;$format&#x60;") else null)
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/v2/Bus/Vehicle/City/{City}".replace("{"+"City"+"}", "$city"),
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.Array<ServiceDTOVersion2BusBusVehicleInfo>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<ServiceDTOVersion2BusBusVehicleInfo>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).statusCode, (response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).statusCode, (response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

}
